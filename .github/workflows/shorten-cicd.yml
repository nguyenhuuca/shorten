# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven CI/CD

on:
 push:
    branches: [ master ]
 pull_request:
    branches: [ master ]
  # release:
  #  types: [created]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
    
    #- name: Install SSH Key
    #  uses: shimataro/ssh-key-action@v2
    #  with:
    #    key: ${{ secrets.SSH_DO_PRIVATE_KEY }} 
    #    known_hosts: 'just-a-placeholder-so-we-dont-get-errors'
        
    - name: Cache the Maven packages to speed up build
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2     

    - name: Build with Maven
      run:  mvn -B package --file pom.xml
      
    - name: Upload
      run: mkdir staging && cp target/shorten-1.0-SNAPSHOT.jar staging
      
    - uses: actions/upload-artifact@v1
      with:
        name: shorten-1.0
        path: staging
        
        
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v1
    - name: Copy file via scp
      uses: appleboy/scp-action@master
      env:
        HOST: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USER }}
        PORT: ${{ secrets.PORT }}
        KEY: ${{ secrets.SSH_DO_SECRET_KEY }}
      with:
        source: "./target/shorten-1.0-SNAPSHOT.jar"
        target: "/opt/testCIID/"

    - name: Executing remote  command
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        USERNAME: ${{ secrets.SSH_USER }}
        PORT: ${{ secrets.PORT }}
        KEY: ${{ secrets.SSH_DO_SECRET_KEY }}
        script: ls -al /opt/testCIID
 
      
    

    #- name: Publish to GitHub Packages Apache Maven
    #  run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
    #  env:
    #    GITHUB_TOKEN: ${{ github.token }}
